{"version":3,"sources":["app/types/Key.ts","app/types/Command.ts","app/components/TerminalHeader/styles.ts","app/components/TerminalHeader/index.tsx","app/components/TerminalIntro/styles.ts","app/components/Highlight.ts","app/components/TerminalIntro/index.tsx","app/components/TerminalPrompt/styles.ts","app/components/TerminalPrompt/index.tsx","app/components/TerminalLine/styles.ts","app/components/TerminalLine/index.tsx","app/components/HelpCommandOutput/styles.ts","app/components/HelpCommandOutput/index.tsx","app/components/ContactCommandOutput/styles.ts","app/components/ContactCommandOutput/index.tsx","app/components/SkillsCommandOutput/styles.ts","app/components/SkillsCommandOutput/index.tsx","app/components/CommandOutput/index.tsx","app/components/TerminalEntry/index.tsx","app/components/Terminal/styles.ts","app/components/Terminal/index.tsx","app/GlobalStyle.ts","app/App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["Key","Command","Wrapper","styled","header","AsciiArt","div","Line","PortfolioAsciiArt","TerminalAsciiArt","TerminalHeader","map","line","p","Hightlight","span","bold","block","TerminalIntro","User","b","TerminalPrompt","Char","Caret","TerminalLine","command","caret","htmlizeSpace","char","index","length","Intro","CommandWrapper","CommandLabel","CommandDescription","HelpCommandOutput","commands","Clear","description","Contact","Exp","Help","Skills","LinkWrapper","LinkUrl","a","ContactCommandOutput","name","url","href","target","CategoryWrapper","CategoryHeader","CategorySkills","SkillWrapper","SkillName","SkillLevel","SkillsCommandOutput","getLevelStr","level","repeat","split","ch","skills","CommandOutput","props","trim","TerminalEntry","join","Content","Terminal","terminalRef","useRef","useState","entries","setEntries","state","setState","scrollToBottom","current","scrollTop","scrollHeight","useEffect","handleKeyDown","key","BackSpace","Math","max","filter","_","ArrowLeft","ArrowRight","limit","min","incCaret","Home","End","handleKeyPress","Delete","Enter","prefix","suffix","writeChar","document","addEventListener","removeEventListener","ref","entry","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8f36d1d.chunk.js","sourcesContent":["export enum Key {\n  End = 'End',\n  Home = 'Home',\n  Enter = 'Enter',\n  Delete = 'Delete',\n  BackSpace = 'Backspace',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n}","export enum Command {\n  Clear = 'clear',\n  Contact = 'contact',\n  Exp = 'exp',\n  Help = 'help',\n  Skills = 'skills',\n}\n\nexport type CommandDoc = {\n  command: Command,\n  description: string,\n};","import styled from 'styled-components';\n\nexport const Wrapper = styled.header`\n  white-space: pre;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 8px;\n\n  @media (min-width: 600px) {\n    font-size: 14px;\n  }\n`;\n\nexport const AsciiArt = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media (min-width: 600px) {\n    width: fit-content;\n  }\n`;\n\nexport const Line = styled.div`\n  width: fit-content;\n\n  ::selection {\n    color: var(--backgroundColor);\n    background: var(--fontColor);\n  }\n`;","import React from 'react';\nimport { Wrapper, AsciiArt, Line } from './styles';\n\nconst PortfolioAsciiArt = [\n  '__________              __    _____      .__  .__        ',\n  '\\\\______   \\\\____________/  |__/ ____\\\\____ |  | |__| ____  ',\n  ' |     ___/  _ \\\\_  __ \\\\   __\\\\   __\\\\/  _ \\\\|  | |  |/  _ \\\\ ',\n  ' |    |  (  <_> )  | \\\\/|  |  |  | (  <_> )  |_|  (  <_> )',\n  ' |____|   \\\\____/|__|   |__|  |__|  \\\\____/|____/__|\\\\____/ ',\n];\n\nconst TerminalAsciiArt = [\n  '  ___________                  .__              .__   ',\n  '  \\\\__    ___/__________  _____ |__| ____ _____  |  |  ',\n  '    |    |_/ __ \\\\_  __ \\\\/     \\\\|  |/    \\\\\\\\__  \\\\ |  |  ',\n  '    |    |\\\\  ___/|  | \\\\/  Y Y  \\\\  |   |  \\\\/ __ \\\\|  |__',\n  '    |____| \\\\___  >__|  |__|_|  /__|___|  (____  /____/',\n  '               \\\\/            \\\\/        \\\\/     \\\\/      '\n];\n\nconst TerminalHeader: React.FC = () => (\n  <Wrapper>\n    <AsciiArt>\n      {PortfolioAsciiArt.map(line => (\n        <Line key={line}>{line}</Line>\n      ))}\n    </AsciiArt>\n    <AsciiArt>\n      {TerminalAsciiArt.map(line => (\n        <Line key={line}>{line}</Line>\n      ))}\n    </AsciiArt>\n  </Wrapper>\n);\n\nexport default TerminalHeader;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.p`\n  line-height: var(--lineHeight);\n\n  ::selection {\n    color: var(--backgroundColor);\n    background: var(--fontColor);\n  }\n`;","import styled from \"styled-components\";\n\ntype Props = {\n  bold?: boolean;\n  block?: boolean;\n};\n\nexport const Hightlight = styled.span<Props>`\n  color: var(--highlightColor);\n  font-weight: ${({ bold }) => bold ? 'bold' : 'normal' };\n  display: ${({ block }) => block ? 'block' : 'inline' };\n\n  ::selection {\n    color: var(--backgroundColor);\n    background: var(--highlightColor);\n  }\n`;","import React from 'react';\nimport { Wrapper } from './styles';\nimport { Hightlight } from '../Highlight';\n\nconst TerminalIntro: React.FC = () => (\n  <Wrapper>\n    Hello, my name is <Hightlight bold>José Ignacio Cruz Moreira</Hightlight>.<br />\n    I am a Full-Stack Software Engineer from Cuba.<br />\n    If you want to know more about me, feel free to type some commands.<br />\n    <Hightlight>Hint</Hightlight>: you can start by typing <Hightlight>help</Hightlight> to see the list of all available commands.\n  </Wrapper>\n);\n\nexport default TerminalIntro;","import styled from 'styled-components';\n\nexport const Wrapper = styled.span`\n  margin-right: 5px;\n\n  ::selection, b::selection {\n    color: var(--backgroundColor);\n    background: var(--fontColor);\n  }\n`;\n\nexport const User = styled.b`\n  display: none;\n  color: var(--fontColorLighten);\n\n  @media (min-width: 600px) {\n    display: inline;\n  }\n`;","import React from 'react';\nimport { Hightlight } from '../Highlight';\nimport { Wrapper, User } from './styles';\n\nconst TerminalPrompt: React.FC = () => (\n  <Wrapper>\n    <User>root@portfolio:</User>\n    <Hightlight>~$</Hightlight>\n  </Wrapper>\n);\n\nexport default TerminalPrompt;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Char = styled.span`\n  position: relative;\n  line-height: var(--lineHeight);\n\n  ::selection {\n    color: var(--backgroundColor);\n    background: var(--fontColor);\n  }\n`;\n\nexport const Caret = styled.span`\n  left: 0;\n  position: absolute;\n  color: var(--backgroundColor);\n  line-height: var(--lineHeight);\n  background-color: var(--fontColor);\n  animation: blink 1s steps(5, start) infinite;\n\n  ::selection {\n    background: var(--fontColor);\n    color: var(--backgroundColor);\n  }\n\n  @keyframes blink {\n    to {\n      visibility: hidden;\n    }\n  }\n`;","import React from 'react'\nimport TerminalPrompt from '../TerminalPrompt';\nimport { Wrapper, Char, Caret } from './styles';\n\ntype Props = {\n  caret?: number;\n  command: string[];\n}\n\nconst TerminalLine: React.FC<Props> = ({ command, caret }) => {\n  const htmlizeSpace = (char: string) => (\n    char === ' ' ? <>&nbsp;</> : char\n  );\n\n  return (\n    <Wrapper >\n      <TerminalPrompt />\n\n      {command.map((char, index) => (\n        <Char key={index}>\n          {htmlizeSpace(char)}\n          {caret === index &&\n            <Caret>\n              {htmlizeSpace(char)}\n            </Caret>\n          }\n        </Char>\n      ))}\n\n      <Char>\n        {caret === command.length &&\n          <Caret>&nbsp;</Caret>\n        }\n      </Char>\n    </Wrapper>\n  )\n};\n\nexport default TerminalLine;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: var(--lineHeight);\n`;\n\nexport const Intro = styled.div`\n  line-height: var(--lineHeight);\n`;\n\nexport const CommandWrapper = styled.div`\n  display: flex;\n  margin-top: var(--lineHeight);\n`;\n\nexport const CommandLabel = styled.div`\n  min-width: 10ch;\n  line-height: var(--lineHeight);\n  color: var(--highlightColor);\n  \n  @media (min-width: 600px) {\n    min-width: 15ch;\n  }\n`;\n\nexport const CommandDescription = styled.div`\n  line-height: var(--lineHeight);\n`;","import React from 'react'\nimport { Command, CommandDoc } from '../../types/Command';\nimport { Hightlight } from '../Highlight';\nimport { Wrapper, CommandDescription, CommandLabel, CommandWrapper, Intro } from './styles';\n\nconst HelpCommandOutput: React.FC = () => {\n  const commands: CommandDoc[] = [\n    {\n      command: Command.Clear,\n      description: 'Clears the command line output.'\n    },\n    {\n      command: Command.Contact,\n      description: 'Allows to get in touch with me.'\n    },\n    {\n      command: Command.Exp,\n      description: 'Displays a list of my work experiences.'\n    },\n    {\n      command: Command.Help,\n      description: 'Displays a list of all the available commands.'\n    },\n    {\n      command: Command.Skills,\n      description: 'Displays a list of the technical skills I have.'\n    },\n  ];\n\n  return (\n    <Wrapper>\n      <Intro>\n        Portfolio Terminal version 1.0.0 (x86_64 architecture)<br/>\n        These interpreter commands are defined internally.\n        Type <Hightlight>help</Hightlight> to see this list.\n      </Intro>\n    \n      {commands.map(({ command, description }) => (\n        <CommandWrapper key={command}>\n          <CommandLabel>\n            {command}\n          </CommandLabel>\n          <CommandDescription>\n            {description}\n          </CommandDescription>\n        </CommandWrapper>\n      ))}\n    </Wrapper>\n  )\n};\n\nexport default HelpCommandOutput;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: var(--lineHeight);\n`;\n\nexport const LinkWrapper = styled.div`\n  margin-top: var(--lineHeight);\n`;\n\nexport const LinkUrl = styled.a`\n  color: var(--highlightColor);\n  line-height: var(--lineHeight);\n`;","import React from 'react'\nimport { LinkWrapper, LinkUrl, Wrapper } from './styles';\n\ntype Link = {\n  name: string;\n  url: string;\n}\n\nconst ContactCommandOutput: React.FC = () => {\n  const links: Link[] = [\n    {\n      name: 'Email',\n      url: 'mailto:joselove2code@gmail.com',\n    },\n    {\n      name: 'Github Profile',\n      url: 'https://github.com/joselove2code',\n    },\n    {\n      name: 'LinkedIn Profile',\n      url: 'https://www.linkedin.com/in/jose-ignacio-cruz-moreira-7a6701106/',\n    },\n    {\n      name: 'Twitter Account',\n      url: 'https://twitter.com/joselove2code',\n    },\n  ];\n\n  return (\n    <Wrapper>\n      {links.map(({ name, url }) => (\n        <LinkWrapper key={name}>\n          - <LinkUrl href={url} target=\"_blank\">{name}</LinkUrl>\n        </LinkWrapper>\n      ))}\n    </Wrapper>\n  )\n};\n\nexport default ContactCommandOutput;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: var(--lineHeight);\n`;\n\nexport const CategoryWrapper = styled.div`\n  margin-top: calc(var(--lineHeight) * 2);\n  \n  :first-child {\n    margin-top: var(--lineHeight);\n  }\n`;\n\nexport const CategoryHeader = styled.div`\n  line-height: var(--lineHeight);\n`;\n\nexport const CategorySkills = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const SkillWrapper = styled.div`\n  max-width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: var(--lineHeight);\n\n  @media (min-width: 900px) {\n    margin-right: 5ch;\n  }\n`;\n\nexport const SkillName = styled.div`\n  display: flex;\n  \n  @media (min-width: 900px) {\n    margin-right: 1ch;\n  }\n`;\n\nexport const SkillLevel = styled.div`\n  display: flex;\n`;","import React from 'react'\nimport { Hightlight } from '../Highlight';\nimport {\n  Wrapper,\n  CategoryHeader,\n  CategoryWrapper,\n  SkillLevel,\n  SkillName,\n  SkillWrapper,\n  CategorySkills\n} from './styles';\n\ntype Skill = {\n  name: string;\n  level: number;\n}\n\ntype Category = {\n  name: string;\n  skills: Skill[];\n}\n\nconst SkillsCommandOutput: React.FC = () => {\n  const categories: Category[] = [\n    {\n      name: 'General Knowledge',\n      skills: [\n        {\n          name: 'Algorithms and Data Structures',\n          level: 10,\n        },\n        {\n          name: 'Design Patterns',\n          level: 9,\n        },\n        {\n          name: 'Linux',\n          level: 9,\n        },\n        {\n          name: 'Git/Github',\n          level: 9,\n        },\n        {\n          name: 'Relational Databases (SQL)',\n          level: 9,\n        },\n        {\n          name: 'MongoDB (NoSQL)',\n          level: 8,\n        },\n      ]\n    },\n    {\n      name: 'Spoken Languages',\n      skills: [\n        {\n          name: 'Spanish',\n          level: 10,\n        },\n        {\n          name: 'English',\n          level: 9,\n        },\n      ]\n    },\n    {\n      name: 'Programming Languages',\n      skills: [\n        {\n          name: 'HTML5/CSS3',\n          level: 10,\n        },\n        {\n          name: 'Javascript/Typescript',\n          level: 10,\n        },\n        {\n          name: 'Python',\n          level: 8,\n        },\n        {\n          name: 'Java',\n          level: 9,\n        },\n        {\n          name: 'PHP',\n          level: 9,\n        },\n      ]\n    },\n    {\n      name: 'Frontend Frameworks',\n      skills: [\n        {\n          name: 'Vue',\n          level: 9,\n        },\n        {\n          name: 'Angular',\n          level: 9,\n        },\n        {\n          name: 'React',\n          level: 8,\n        },\n      ]\n    },\n    {\n      name: 'Backend Frameworks',\n      skills: [\n        {\n          name: 'NodeJS/ExpressJS',\n          level: 9,\n        },\n        {\n          name: 'NestJS',\n          level: 9,\n        },\n        {\n          name: 'Django/DRF',\n          level: 8,\n        },\n        {\n          name: 'Laravel',\n          level: 9,\n        },\n      ]\n    },\n  ];\n\n  const getHeaderLine = (header: string) => {    \n    return '='.repeat(header.length);\n  };\n\n  const getLevelStr = (level: number) => {    \n    return '#'.repeat(10).split('').map((ch, index) => {\n      return index >= level\n        ? '.'\n        : <Hightlight key={index}>{ch}</Hightlight>;\n    });\n  };\n\n  return (\n    <Wrapper>\n      {categories.map(({ name, skills }) => (\n        <CategoryWrapper key={name}>\n          <CategoryHeader>\n            {name}\n            <Hightlight block>{getHeaderLine(name)}</Hightlight>\n          </CategoryHeader>\n          <CategorySkills>\n            {skills.map(({ name, level }) => (\n              <SkillWrapper key={name}>\n                <SkillName>{name}:</SkillName>\n                <SkillLevel>\n                  [{getLevelStr(level)}]\n                </SkillLevel>\n              </SkillWrapper>\n            ))}\n          </CategorySkills>\n        </CategoryWrapper>\n      ))}\n    </Wrapper>\n  )\n};\n\nexport default SkillsCommandOutput;\n","import React from 'react';\nimport { Command } from '../../types/Command';\nimport HelpCommandOutput from '../HelpCommandOutput';\nimport ContactCommandOutput from '../ContactCommandOutput';\nimport SkillsCommandOutput from '../SkillsCommandOutput';\n\ntype Props = { command: string };\n\nconst CommandOutput: React.FC<Props> = (props) => {\n  const command = props.command.trim();\n\n  switch (command) {\n    case '':\n      return null;\n    case Command.Help:\n      return <HelpCommandOutput />;\n    case Command.Contact:\n      return <ContactCommandOutput />;\n    case Command.Skills:\n      return <SkillsCommandOutput />;\n    default: \n      return <div> {command}: Command not found </div>;\n  }\n};\n\nexport default CommandOutput;","import React from 'react';\nimport TerminalLine from '../TerminalLine';\nimport CommandOutput from '../CommandOutput';\n\ntype Props = {\n  command: string[];\n}\n\nconst TerminalEntry: React.FC<Props> = ({ command }) => {\n  return (\n    <>\n      <TerminalLine command={command} />\n      <CommandOutput command={command.join('')} />\n    </>\n  )\n};\n\nexport default TerminalEntry;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  position: absolute;  \n  padding-top: var(--verticalMargin);  \n  padding-bottom: var(--verticalMargin);  \n  background-color: var(--backgroundColor);\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n    background-color: gray;\n  }\n`;\n\nexport const Content = styled.div`\n  margin: auto;\n  color: var(--fontColor);\n  font-family: var(--font);\n  max-width: var(--maxWidth);\n  padding-left: var(--marginX);\n  padding-right: var(--marginX);\n`;","import React, { useEffect, useRef, useState } from 'react'\nimport { Key } from '../../types/Key';\nimport { Command } from '../../types/Command';\nimport TerminalHeader from '../TerminalHeader';\nimport TerminalIntro from '../TerminalIntro';\nimport TerminalLine from '../TerminalLine';\nimport TerminalEntry from '../TerminalEntry';\nimport { Wrapper, Content } from './styles';\n\ntype State = {\n  caret: number;\n  command: string[];\n}\n\ntype Entry = {\n  command: string[];\n};\n\nconst Terminal: React.FC = () => {\n  const terminalRef = useRef<HTMLDivElement>(null);\n  const [entries, setEntries] = useState<Entry[]>([]);\n  const [state, setState] = useState<State>({\n    caret: 0,\n    command: [],\n  });\n\n  const scrollToBottom = () => {\n    if (terminalRef.current)\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n  };\n\n  useEffect(() => {\n    const decCaret = () => {\n      setState({\n        ...state,\n        caret: Math.max(0, state.caret - 1)\n      });\n    };\n\n    const incCaret = (limit = state.command.length) => {\n      setState({\n        ...state,\n        caret: Math.min(limit, state.caret + 1)\n      });\n    };\n\n    const moveCaretToStart = () => {\n      setState({\n        ...state,\n        caret: 0,\n      });\n    }\n\n    const moveCaretToEnd = () => {\n      setState({\n        ...state,\n        caret: state.command.length,\n      });\n    }\n\n    const writeChar = (char: string) => {\n      const prefix = state.command.filter((_, index) => index < state.caret);\n      const suffix = state.command.filter((_, index) => index >= state.caret);\n\n      setState({\n        caret: state.caret + 1,\n        command: [...prefix, char, ...suffix],\n      });\n    }\n\n    const deleteChar = () => {\n      setState({\n        ...state,\n        command: state.command.filter((_, index) => index !== state.caret),\n      });\n    };\n\n    const deletePrevChar = () => {\n      setState({\n        caret: Math.max(0, state.caret - 1),\n        command: state.command.filter((_, index) => index !== (state.caret - 1)),\n      });\n    };\n\n    const execCommand = () => {\n      const command = state.command.join('').trim();\n      \n      if (command === Command.Clear) {\n        setEntries([]);\n      } else {\n        setEntries([...entries, { command: state.command }])\n      }\n\n      setState({\n        command: [],\n        caret: 0,\n      });\n    };\n\n    const handleKeyDown = ({ key }: KeyboardEvent) => {\n      if (key === Key.BackSpace)\n        deletePrevChar()\n      else if (key === Key.ArrowLeft)\n        decCaret();\n      else if (key === Key.ArrowRight)\n        incCaret();\n      else if (key === Key.Home)\n        moveCaretToStart();\n      else if (key === Key.End)\n        moveCaretToEnd();\n      \n      scrollToBottom();\n    };\n    \n    const handleKeyPress = ({ key }: KeyboardEvent) => {\n      if (key === Key.Delete)\n        deleteChar();\n      else if (key === Key.Enter)\n        execCommand();\n      else\n        writeChar(key);\n      \n      scrollToBottom();\n    };\n    \n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keypress', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, [state, entries]);\n\n  return (\n    <Wrapper ref={terminalRef}>\n      <Content>\n        <TerminalHeader />\n        <TerminalIntro />\n        {entries.map((entry, index) => (\n          <TerminalEntry key={index} command={entry.command} />\n        ))}\n        <TerminalLine command={state.command} caret={state.caret} />\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Terminal;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --marginX: 15px;\n    --fontSize: 16px;\n    --verticalMargin: 15px;\n    --highlightColor: #3a96dd;\n    --fontColor: #16c60c;\n    --fontColorLighten: #5cf153;\n    --maxWidth: 1210px;\n    --lineHeight: 20px;\n    --backgroundColor: black;\n    --font: Consolas, monospace;\n\n    @media (min-width: 1250px) {\n      --verticalMargin: 80px;\n    }\n  }\n`;\n","import { FunctionComponent } from 'react';\nimport Terminal from './components/Terminal';\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App: FunctionComponent = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Terminal />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}